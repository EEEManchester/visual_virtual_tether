#!/usr/bin/env python
PACKAGE = "visual_virtual_tether"
NODE_NAME = "mallard_to_twist"         # parameter is the name of a node this could run in  (used to generate documentation only)
PARAMS_NAME = "MallardTwist"      # parameter is a name prefix the generated files will get (e.g. "<name>Config.h" for c++, or "<name>Config.py" for python. 

from math import pi
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

group_overal = gen.add_group("overall")
group_overal.add("gain_x", double_t,  0, "Overall gain for liner velocity of robot in x-axis - default value is 1.", 1, 0.01, 5)
group_overal.add("gain_y", double_t,  0, "Overall gain for liner velocity of robot in y-axis - default value is 1.", 1, 0.01, 5)
group_overal.add("gain_yaw", double_t,  0, "Overall gain for yaw velocity of robot in rad/s - default value is 1.", 1, 0.01, 5)

group_joy = gen.add_group("joy")
group_joy.add("joy_gain_x", double_t,  0, "Joy gain for liner velocity of robot in x-axis - default value is 1.", 1, 0.01, 5)
group_joy.add("joy_gain_y", double_t,  0, "Joy gain for liner velocity of robot in y-axis - default value is 1.", 1, 0.01, 5)
group_joy.add("joy_gain_yaw", double_t,  0, "Joy gain for yaw velocity of robot in rad/s - default value is 1.", 1, 0.01, 5)
            
group_vt = gen.add_group("virtual_tether")
group_vt.add("vt_gain_x", double_t,  0, "Virtual tether gain for liner velocity of robot in x-axis - default value is 1.", 1, 0, 5)
group_vt.add("vt_gain_y", double_t,  0, "Virtual tether gain for liner velocity of robot in y-axis - default value is 1.", 1, 0, 5)
group_vt.add("vt_gain_yaw", double_t,  0, "Virtual tether gain for yaw velocity of robot in rad/s - default value is 1.", 1, 0, 5)

exit(gen.generate(PACKAGE, NODE_NAME, PARAMS_NAME))
